• The total number of days spent on the trip 
• The time of departure on the first day of the trip, and the time of arrival back home on the last 
day of the trip 
• The amount of any round-trip airfare 
• The amount of any car rentals 
• Miles driven, if a private vehicle was used. Calculate the vehicle expense as $0.27 per mile 
driven 
• Parking fees (The company allows up to $6 per day. Anything more than this must be paid by 
the employee.) 
• Taxi fees, if a taxi was used anytime during the trip (The company allows up to $10 per day, 
for each day a taxi was used. Anything more than this must be paid by the employee.) 
• Conference or seminar registration fees 
• Hotel expenses (The company allows up to $90 per night for lodging. Anything more than this 
must be paid by the employee.) 
• The amount of each meal eaten. 

The program should calculate and display: 
the total expenses incurred by the businessperson, 
the total allowable expenses for the trip, 
the excess that must be reimbursed by the businessperson, if any.
The amount saved by the businessperson if the expenses were under the total allowed. 

Input Validation: 
Do not accept negative numbers for any dollar amount or for miles driven in a private vehicle. 
Do not accept numbers less than 1 for the number of days. 
Only accept valid times for the time of departure and the time of arrival.

**Main Method/Total amount/Organizing data**
struct Expense {expectedCost, actualCost}
make expenses[] and pass to functions
void calculateAndPrintExpenses - calculates and returns expenses based on expenses[]

**Travel fees**
create various functions requiring user input and returning Expense

**Days/Time/Meals**
create date and time int in main
create functions asking for trip length(days & time)
create function to calculate meal prices

**Other expenses/Input Validation** 
create various functions for all other expenses(conference, seminar, hotel)
add input validation